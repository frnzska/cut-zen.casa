AWSTemplateFormatVersion: 2010-09-09

Parameters:
  DomainName:
    Type: String

Mappings:
  RegionMap:
    us-east-1:
      S3hostedzoneID: Z3AQBSTGFYJSTF
      websiteendpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3hostedzoneID: Z2F56UZL2M1ACD
      websiteendpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3hostedzoneID: Z3BJ6K6RIION7M
      websiteendpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3hostedzoneID: Z1BKCTXD74EZPE
      websiteendpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3hostedzoneID: Z3O0J2DXBE1FTB
      websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3hostedzoneID: Z1WCIGYICN2BYD
      websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3hostedzoneID: Z2M4EHUR26P7ZW
      websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3hostedzoneID: Z31GFT0UA1I2HV
      websiteendpoint: s3-website-sa-east-1.amazonaws.com

Resources:
  CFDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: 'true'
        #Logging:
        #  IncludeCookies: 'false'
        #  Bucket: !Sub 'logs.${DomainName}'
        Aliases:
          - !Sub 'www.${DomainName}'
          - !Ref DomainName
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: "redirect-to-https"
        Origins:
        - Id: S3Origin
          DomainName: !Sub '${DomainName}.s3-website-${AWS::Region}.amazonaws.com' # todo cross stack ref
          CustomOriginConfig:
            HTTPPort: '80'
            HTTPSPort: '443'
            OriginProtocolPolicy: http-only
          #S3OriginConfig:
          #  OriginAccessIdentity: # Todo!Join [ "", [ "origin-access-identity/cloudfront/", !Ref OriginAccessIdentity ] ]
            # maybe do later
        ViewerCertificate:
          AcmCertificateArn: arn....#Todo
          SslSupportMethod: "sni-only"

  DNS:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: !Sub Hosted zone for "${DomainName}"
      Name: !Ref DomainName
  DNSEntries:
    DependsOn: DNS
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${DomainName}.'
      RecordSets:
        - AliasTarget:
           #HostedZoneId: !FindInMap [ RegionMap, !Ref 'AWS::Region', S3hostedzoneID]
           #DNSName: !FindInMap [ RegionMap, !Ref 'AWS::Region', websiteendpoint]
           HostedZoneId: Z2FDTNDATAQYW2 # of CF
           DNSName: !GetAtt [CFDistribution, DomainName]
          Name: !Ref DomainName
          Type: A
        - Name: !Sub 'www.${DomainName}'
          Type: A
          AliasTarget:
            DNSName: !GetAtt [CFDistribution, DomainName]
            HostedZoneId: Z2FDTNDATAQYW2